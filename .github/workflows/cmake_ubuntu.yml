name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # the directory of the library's source code (and which contains the CMakeLists.txt)
  LAL_DIR: /home/runner/work/linear-arrangement-library/linear-arrangement-library/lal
  # directories of the different builds
  RELEASE_DIR: ${{github.workspace}}/build-release
  DEBUG_DIR: ${{github.workspace}}/build-debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ${{env.LAL_DIR}} -B ${{env.RELEASE_DIR}} -DCMAKE_BUILD_TYPE=Release ;
           cmake ${{env.LAL_DIR}} -B ${{env.DEBUG_DIR}} -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{env.RELEASE_DIR}} --config Release -j4 ;
           cmake --build ${{env.DEBUG_DIR}} --config Debug -j4
      
